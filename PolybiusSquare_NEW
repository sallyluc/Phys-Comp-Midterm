int password2 [] = {
  2,1,3,3,5,3,1,5,5,4, 0, 0}; //HAPPY

int button = 2, clickedButton = 6, submitButton = 7;
int buttonState, clickedButtonState, lastButtonState, lastClickedButtonState, submitButtonState, lastSubmitButtonState;

int clicked, clickedNext; 

int saveAll[100], finalArray[100];
int numCounter =0;

int finalArraySizeCipher3;
long lastDebounceTime = 0;
long debounceDelay = 50;  

void setup()
{
  pinMode (button, INPUT);
  pinMode (clickedButton, INPUT);
  Serial.begin(9600);
}

void loop ()
{
  readVal();
  readClickedVal();
  getFinalArraySizeFinalCipher();
}

void readVal()
{
  int reading = digitalRead(button);


  if (reading != lastButtonState) {
    lastDebounceTime = millis();
  } 

  if ((millis() - lastDebounceTime) > debounceDelay) {
    if (reading != buttonState) {
      buttonState = reading;

      if (buttonState == HIGH) {

        clicked++;
        if (clicked >=6)
          clicked = 1;
      }
    }
  }
  lastButtonState = reading;
}

void readClickedVal()
{
  int reading = digitalRead(clickedButton);

  if (reading != lastClickedButtonState) {
    lastDebounceTime = millis();
  } 

  if ((millis() - lastDebounceTime) > debounceDelay) {
    if (reading != clickedButtonState) {
      clickedButtonState = reading;

      if (clickedButtonState == HIGH) {
        saveAll[numCounter] = clicked;
        Serial.print ("X vals: ");
        Serial.println (saveAll[numCounter]);
        numCounter++;
        clicked=0;
      }
    }
  }
  lastClickedButtonState = reading;  
}


void getFinalArraySizeFinalCipher()
{
  int reading = digitalRead(submitButton);

  if (reading != lastSubmitButtonState) {
    lastDebounceTime = millis();
  } 

  if ((millis() - lastDebounceTime) > debounceDelay) {
    if (reading != submitButtonState) {
      submitButtonState = reading;

      if (submitButtonState == HIGH) {

        for (int i = 0; i < sizeof(saveAll)/sizeof(int); i++)
        {
          if (saveAll[i] !=0){
            finalArraySizeCipher3++;
          }
        }

        for (int i = 0; i < finalArraySizeCipher3; i++)
        {
          finalArray[i] = saveAll[i];
        }
        
        while(finalArraySizeCipher3< sizeof(password2)/sizeof(int))
        {
          finalArraySizeCipher3++;
        }
        Serial.print ("Ray Size: ");
        Serial.println (finalArraySizeCipher3);

        compareResultsCipher3();
      }
    }
  }
  lastSubmitButtonState = reading;
}

boolean correctPasswordCheck2 = false;

void compareResultsCipher3()
{
 
    for (int i = 0; i < finalArraySizeCipher3; i++)
    {
      Serial.println (finalArray[i]);
      if (finalArray[i] != password2[i])
      {
        correctPasswordCheck2 = false; 
        break;
      }

      if ((i == finalArraySizeCipher3-1) && (finalArray[i] == password2[i]))
      {
        correctPasswordCheck2 = true; 
      }
    }

    if (correctPasswordCheck2 == false)
    {
      Serial.println("INCORRECT"); 
    }
    else
      Serial.println("CORRECT"); 
}
//----------------------------------------------------------------------------------------------------------------------------------------

