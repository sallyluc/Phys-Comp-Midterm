boolean runPot = true;
int setPass [] = {
  7, 3, 5};

int potentiometer = A0;
long lastDebounceTime = 0;  // the last time the output pin was toggled
long debounceDelay = 50;    // the debounce time; increase if the output flickers
int buttonX = 2, buttonY = 6, submit = 7;
int buttonXState, buttonYState, lastXState, lastYState, submitState, lastSubmitState;


int setPotVal;
int setComboButton = 4;
int lastSetState, setState;
int maxVal1 = 0;

boolean setFirstNum = false, setSecondNum = false, setThirdNum = false; 
boolean resetMax1 = false;

boolean startUp = false;

int setButtonPressed = 0;








int potVal;
int lockedLED = 10, unlockedLED = 11;


int maxVal = 0;

boolean checkFirstNum = false, checkSecondNum = false, checkThirdNum = false; 
boolean resetMaxVal = false;

boolean startUpVal = false;




int password [] = {
  1,1,3,5,3,5,3,1,1,5,4,3}; //APPLES

int clickedX, clickedY; 

boolean saveXCheck=false, saveYCheck = false;

int saveTapArray[100];//, saveY[] = {};
int numberTapCounter = 0;

int finalArraySize;


void setup()
{
  Serial.begin(9600); 
}
void loop ()
{
  checkSetPressed();
    shouldResetPasswords ();
}

void shouldResetPasswords ()
{
  if (setButtonPressed ==1)
  {
    setCombinations(); 
  }
  else if (setButtonPressed ==2)
  {
    setTapPassword();
  }
  else
  {
    if (setButtonPressed ==3)
      setPolybiusPassword();
  }
}

void checkSetPressed()
{
  int reading = digitalRead(setComboButton);

  if (reading != lastSetState) {

    lastDebounceTime = millis();
  } 

  if ((millis() - lastDebounceTime) > debounceDelay) {

    if (reading != setState) {
      setState = reading;

      if (setState == HIGH) {
        setButtonPressed ++;
        runPot = false;
      }
    }
  }

  //digitalWrite(ledPin, ledState);
  lastSetState = reading; 
}

void setCombinations()
{
  setPotVal = analogRead(potentiometer); 
  setPotVal = map(setPotVal, 0,1023,10,1);


  if ((setPotVal != 1) && (setFirstNum == false ||setSecondNum == false||setThirdNum == false)){
    startUp = true;

    if (resetMax1 == true)
    {
      resetMax1 = false;
      maxVal1 = 0;
    }

    if (setPotVal > maxVal1)
      maxVal1 = setPotVal; 

  }
  else 
  {
    if (startUp == true){
      if (setPotVal == 1 && setFirstNum == false)
      {
        setPass[0] = maxVal1; 
        setFirstNum = true;  
        resetMax1 = true;
      }
      else if (setPotVal == 1 && setSecondNum == false)
      {
        setPass[1] = maxVal1; 
        setSecondNum = true;  
        resetMax1 = true;
      }
      else{ 
        if (setPotVal == 1 && setThirdNum == false)
        {
          setPass[2] = maxVal1; 
          setThirdNum = true;  
          resetMax1 = true;
          setButtonPressed ++;
        }
      }

      startUp = false;
    }
  }

  Serial.print ("PotVal: ");
  Serial.println (setPotVal);

  Serial.print ("SetPass1: ");
  Serial.println (setPass[0]);
  Serial.print ("SetPass2: ");
  Serial.println (setPass[1]);
  Serial.print ("SetPass3: ");
  Serial.println (setPass[2]);

  delay(500); 
}



//----------TAP CODE-------------------------------------------------------------------------------------------------------------------------------



void resetTapPassword()
{
  for (int i = 0; i < sizeof(password)/sizeof(int); i++)
  {
    password [i] = 0; 
  }
}

void readSetXVal()
{
  int reading = digitalRead(buttonX);

  if (reading != lastXState) {
    lastDebounceTime = millis();
  } 

  if ((millis() - lastDebounceTime) > debounceDelay) {
    if (reading != buttonXState) {
      buttonXState = reading;

      if (buttonXState == HIGH) {
        if (numberTapCounter <=11)
        {
          saveXCheck = true;

          if (saveYCheck == true)
          {  

            Serial.print("Y: ");
            Serial.println (saveTapArray[numberTapCounter]);

            numberTapCounter++;
            saveYCheck = false;
            clickedX = 0;
          }


          clickedX++;

          if (clickedX >=6)
            clickedX = 1;
          saveTapArray[numberTapCounter] = clickedX;
        }
      }
      else
      {

      }
    }
  }
  lastXState = reading;
}

void readSetYVal()
{
  int reading = digitalRead(buttonY);

  if (reading != lastYState) {
    lastDebounceTime = millis();
  } 

  if ((millis() - lastDebounceTime) > debounceDelay) {
    if (reading != buttonYState) {
      buttonYState = reading;

      if (buttonYState == HIGH) {
        if (numberTapCounter <=10)
        {
          saveYCheck = true;
          if (saveXCheck == true)
          {
            Serial.print("X: ");
            Serial.println (saveTapArray[numberTapCounter]);
            numberTapCounter++;
            saveXCheck = false;
            clickedY = 0;
          }

          if (numberTapCounter !=0){
            clickedY++;
            if (clickedY >=6)
              clickedY = 1;
            saveTapArray[numberTapCounter] = clickedY;
          }
        }
      }
    }
  }
  lastYState = reading;
}

void changeFinalTapArray()
{
  int reading = digitalRead(submit);

  if (reading != lastSubmitState) {
    lastDebounceTime = millis();
  } 

  if ((millis() - lastDebounceTime) > debounceDelay) {
    if (reading != submitState) {
      submitState = reading;

      if (submitState == HIGH) {
        if (numberTapCounter >=1){
          resetTapPassword();
          
                    while (numberTapCounter <sizeof(password)/sizeof(int))
          {
            numberTapCounter++;
            saveTapArray[numberTapCounter]=0;
          }
          
          for (int i = 0; i < sizeof(password)/sizeof(int); i++)
          {
            password[i] = saveTapArray[i];
            Serial.print("password: ");
            Serial.println(password[i]);
          }      
          setButtonPressed++;
        }
      }
    }
  }
  lastSubmitState = reading;
}

void setTapPassword()
{
  readSetXVal();
  readSetYVal();
  changeFinalTapArray(); 
}

//----------POLYBIUS CODE--------------------------------------------------------------------------------------------------------------------------


int password2 [] = {
  2,1,3,3,5,3,1,5,5,4,0,0}; //HAPPY

int button = 2, clickedButton = 6, submitButton = 7;
int buttonState, clickedButtonState, lastButtonState, lastClickedButtonState, submitButtonState, lastSubmitButtonState;

int clicked; 

int saveAll[100], finalArray[100];
int numPolybiusCounter =0;

int finalArraySizeCipher3;


void resetPolybiusPassword()
{
  for (int i = 0; i < sizeof(password2)/sizeof(int); i++)
  {
    password2 [i] = 0; 
  }
}

void readSetPolybiusVal()
{
  int reading = digitalRead(button);

  if (reading != lastButtonState) {
    lastDebounceTime = millis();
  } 

  if ((millis() - lastDebounceTime) > debounceDelay) {
    if (reading != buttonState) {
      buttonState = reading;

      if (buttonState == HIGH) {
        if (numPolybiusCounter <=11)
        {
          clicked++;

          if (clicked >=6)
            clicked = 1;

          Serial.println (clicked);
        }
      }
    }
  }
  lastButtonState = reading;
}

void readSavePolybiusVal()
{
  int reading = digitalRead(clickedButton);

  if (reading != lastClickedButtonState) {
    lastDebounceTime = millis();
  } 

  if ((millis() - lastDebounceTime) > debounceDelay) {
    if (reading != clickedButtonState) {
      clickedButtonState = reading;

      if (clickedButtonState == HIGH) {
        if (clicked >0){
          if (numPolybiusCounter <=11)
          {
            saveAll[numPolybiusCounter] = clicked;
            Serial.print ("saveAll: ");
            Serial.println (saveAll[numPolybiusCounter]);

            numPolybiusCounter++;
            clicked = 0;
          }
        }

      }
    }
  }
  lastClickedButtonState = reading;
}

void changeFinalPolybiusArray()
{
  int reading = digitalRead(submitButton);

  if (reading != lastSubmitButtonState) {
    lastDebounceTime = millis();
  } 

  if ((millis() - lastDebounceTime) > debounceDelay) {
    if (reading != submitButtonState) {
      submitButtonState = reading;

      if (submitButtonState == HIGH) {
        resetPolybiusPassword();
        for (int i = 0; i < sizeof(password2)/sizeof(int); i++)
        {
          password2[i] = saveAll[i];
          Serial.println(password2[i]);
          setButtonPressed = 0;
        }      
        runPot = true;
        for (int i = 0; i < 3; i++)
        {
          Serial.print("setPass[i]: ");
          Serial.println(setPass[i]);
        }
      }
    }
  }
  lastSubmitButtonState = reading;
}

void setPolybiusPassword()
{
  readSetPolybiusVal();
  readSavePolybiusVal();
  changeFinalPolybiusArray();
}
